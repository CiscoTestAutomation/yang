<node name="openconfig-interfaces" prefix="oc-if" type="module"><namespace import="false" module="openconfig-transport-types" prefix="oc-opt-types">http://openconfig.net/yang/transport-types</namespace><namespace import="false" module="openconfig-spanning-tree-types" prefix="oc-stp-types">http://openconfig.net/yang/spanning-tree/types</namespace><namespace import="false" module="openconfig-lacp" prefix="oc-lacp">http://openconfig.net/yang/lacp</namespace><namespace import="false" module="openconfig-network-instance-l3" prefix="oc-ni-l3">http://openconfig.net/yang/network-instance-l3</namespace><namespace import="false" module="openconfig-if-ip" prefix="oc-ip">http://openconfig.net/yang/interfaces/ip</namespace><namespace import="false" module="openconfig-wavelength-router" prefix="oc-wave-router">http://openconfig.net/yang/wavelength-router</namespace><namespace import="false" module="ietf-inet-types" prefix="inet">urn:ietf:params:xml:ns:yang:ietf-inet-types</namespace><namespace import="false" module="openconfig-interfaces" prefix="oc-if">http://openconfig.net/yang/interfaces</namespace><namespace import="false" module="cisco-xe-openconfig-vlan-deviation" prefix="oc-vlan-devs">http://cisco.com/ns/yang/cisco-xe-openconfig-vlan-deviation</namespace><namespace import="false" module="cisco-xe-openconfig-interfaces-ext" prefix="oc-if-cisco">http://cisco.com/ns/yang/cisco-xe-openconfig-interfaces-ext</namespace><namespace import="false" module="openconfig-bgp" prefix="oc-bgp">http://openconfig.net/yang/bgp</namespace><namespace import="false" module="cisco-xe-openconfig-if-ethernet-deviation" prefix="oc-if-eth-devs">http://openconfig.net/yang/cisco-xe-openconfig-if-ethernet-deviation</namespace><namespace import="false" module="openconfig-vlan-types" prefix="oc-vlan-types">http://openconfig.net/yang/vlan-types</namespace><namespace import="false" module="cisco-xe-openconfig-if-ip-deviation" prefix="oc-ifip-devs">http://openconfig.net/yang/cisco-xe-openconfig-if-ip-deviation</namespace><namespace import="false" module="cisco-xe-openconfig-if-ethernet-ext" prefix="cisco-if-eth">http://cisco.com/ns/yang/cisco-xe-openconfig-if-ethernet-ext</namespace><namespace import="true" module="ietf-interfaces" prefix="ietf-if">urn:ietf:params:xml:ns:yang:ietf-interfaces</namespace><namespace import="false" module="openconfig-spanning-tree" prefix="oc-stp">http://openconfig.net/yang/spanning-tree</namespace><namespace import="false" module="openconfig-acl" prefix="oc-acl">http://openconfig.net/yang/acl</namespace><namespace import="false" module="openconfig-network-instance" prefix="oc-netinst">http://openconfig.net/yang/network-instance</namespace><namespace import="false" module="openconfig-if-aggregate" prefix="oc-lag">http://openconfig.net/yang/interfaces/aggregate</namespace><namespace import="false" module="iana-if-type" prefix="ianaift">urn:ietf:params:xml:ns:yang:iana-if-type</namespace><namespace import="true" module="ietf-yang-types" prefix="yang">urn:ietf:params:xml:ns:yang:ietf-yang-types</namespace><namespace import="false" module="tailf-common" prefix="tailf">http://tail-f.com/yang/common</namespace><namespace import="false" module="openconfig-packet-match" prefix="oc-pkt-match">http://openconfig.net/yang/header-fields</namespace><namespace import="false" module="oc-mapping-acl" prefix="oc-map-acl">http://openconfig.net/yang/oc-mapping-acl</namespace><namespace import="false" module="openconfig-bgp-types" prefix="oc-bgp-types">http://openconfig.net/yang/bgp-types</namespace><namespace import="false" module="openconfig-transport-line-common" prefix="oc-line-com">http://openconfig.net/yang/transport-line-common</namespace><namespace import="false" module="openconfig-if-ip-ext" prefix="oc-ip-ext">http://openconfig.net/yang/interfaces/ip-ext</namespace><namespace import="false" module="openconfig-routing-policy" prefix="oc-rpol">http://openconfig.net/yang/routing-policy</namespace><namespace import="false" module="openconfig-lldp" prefix="oc-lldp">http://openconfig.net/yang/lldp</namespace><namespace import="false" module="oc-mapping-stp" prefix="oc-mtp">http://openconfig.net/yang/oc-mapping-stp</namespace><namespace import="true" module="openconfig-extensions" prefix="oc-ext">http://openconfig.net/yang/openconfig-ext</namespace><namespace import="false" module="openconfig-vlan" prefix="oc-vlan">http://openconfig.net/yang/vlan</namespace><namespace import="false" module="cisco-xe-openconfig-interfaces-deviation" prefix="oc-if-devs">http://openconfig.net/yang/cisco-xe-openconfig-interfaces-deviation</namespace><namespace import="false" module="openconfig-packet-match-types" prefix="oc-pkt-match-types">http://openconfig.net/yang/packet-match-types</namespace><namespace import="false" module="openconfig-platform-types" prefix="oc-platform-types">http://openconfig.net/yang/platform-types</namespace><namespace import="false" module="openconfig-policy-types" prefix="oc-pol-types">http://openconfig.net/yang/policy-types</namespace><namespace import="false" module="openconfig-local-routing" prefix="oc-loc-rt">http://openconfig.net/yang/local-routing</namespace><namespace import="false" module="openconfig-platform" prefix="oc-platform">http://openconfig.net/yang/platform</namespace><namespace import="false" module="openconfig-network-instance-types" prefix="oc-ni-types">http://openconfig.net/yang/network-instance-types</namespace><namespace import="false" module="openconfig-types" prefix="oc-types">http://openconfig.net/yang/openconfig-types</namespace><namespace import="false" module="openconfig-if-ethernet" prefix="oc-eth">http://openconfig.net/yang/interfaces/ethernet</namespace><namespace import="false" module="openconfig-lldp-types" prefix="oc-lldp-types">http://openconfig.net/yang/lldp/types</namespace><node access="read-write" name="interfaces" type="container"><description><![CDATA[Top level container for interfaces, including configuration
and state data.Top level container for interfaces, including configuration
and state data.]]>None</description><node access="read-write" key="name" name="interface" type="list"><description><![CDATA[The list of named interfaces on the device.The list of named interfaces on the device.]]>None</description><node access="read-write" datatype="-&gt; ../config/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[References the configured name of the interfaceReferences the configured name of the interface]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configurable items at the global, physical interface
levelConfigurable items at the global, physical interface
level]]>None</description><node access="read-write" datatype="identityref:ietf-if:interface-type" mandatory="true" name="type" type="leaf" values="ianaift:iana-interface-type"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The type of the interface.

When an interface entry is created, a server MAY
initialize the type leaf with a valid value, e.g., if it
is possible to derive the type from the name of the
interface.

If a client tries to set the type of an interface to a
value that can never be used by the system, e.g., if the
type is not supported or if the type does not match the
name of the interface, the server MUST reject the request.
A NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.[adapted from IETF interfaces model (RFC 7223)]

The type of the interface.

When an interface entry is created, a server MAY
initialize the type leaf with a valid value, e.g., if it
is possible to derive the type from the name of the
interface.

If a client tries to set the type of an interface to a
value that can never be used by the system, e.g., if the
type is not supported or if the type does not match the
name of the interface, the server MUST reject the request.
A NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.]]>None</description></node><node access="read-write" datatype="uint16" name="mtu" type="leaf"><description><![CDATA[Set the max transmission unit size in octets
for the physical interface.  If this is not set, the mtu is
set to the operational default -- e.g., 1514 bytes on an
Ethernet interface.Set the max transmission unit size in octets
for the physical interface.  If this is not set, the mtu is
set to the operational default -- e.g., 1514 bytes on an
Ethernet interface.]]>None</description></node><node access="read-write" datatype="string" name="name" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.]]>None</description></node><node access="read-write" datatype="string" name="description" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.]]>None</description></node><node access="read-write" datatype="boolean" default="true" name="enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.]]>None</description></node><node access="read-write" name="oc-if-cisco:bandwidth" type="container"><node access="read-write" datatype="uint32" name="oc-if-cisco:kilobits" type="leaf"><description><![CDATA[Add bandwidth configuration for XE routers.Add bandwidth configuration for XE routers.]]>None</description></node></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data at the global interface levelOperational state data at the global interface level]]>None</description><node access="read-only" datatype="identityref:ietf-if:interface-type" mandatory="true" name="type" type="leaf" values="ianaift:iana-interface-type"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The type of the interface.

When an interface entry is created, a server MAY
initialize the type leaf with a valid value, e.g., if it
is possible to derive the type from the name of the
interface.

If a client tries to set the type of an interface to a
value that can never be used by the system, e.g., if the
type is not supported or if the type does not match the
name of the interface, the server MUST reject the request.
A NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.[adapted from IETF interfaces model (RFC 7223)]

The type of the interface.

When an interface entry is created, a server MAY
initialize the type leaf with a valid value, e.g., if it
is possible to derive the type from the name of the
interface.

If a client tries to set the type of an interface to a
value that can never be used by the system, e.g., if the
type is not supported or if the type does not match the
name of the interface, the server MUST reject the request.
A NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.]]>None</description></node><node access="read-only" datatype="uint16" name="mtu" type="leaf"><description><![CDATA[Set the max transmission unit size in octets
for the physical interface.  If this is not set, the mtu is
set to the operational default -- e.g., 1514 bytes on an
Ethernet interface.Set the max transmission unit size in octets
for the physical interface.  If this is not set, the mtu is
set to the operational default -- e.g., 1514 bytes on an
Ethernet interface.]]>None</description></node><node access="read-only" datatype="string" name="name" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.]]>None</description></node><node access="read-only" datatype="string" name="description" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.]]>None</description></node><node access="read-only" datatype="boolean" default="true" name="enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.]]>None</description></node><node access="read-only" datatype="uint32" name="ifindex" type="leaf"><description><![CDATA[System assigned number for each interface.  Corresponds to
ifIndex object in SNMP Interface MIBSystem assigned number for each interface.  Corresponds to
ifIndex object in SNMP Interface MIB]]>None</description></node><node access="read-only" datatype="enumeration" mandatory="true" name="admin-status" type="leaf" values="UP|DOWN|TESTING"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The desired state of the interface.  In RFC 7223 this leaf
has the same read semantics as ifAdminStatus.  Here, it
reflects the administrative state as set by enabling or
disabling the interface.[adapted from IETF interfaces model (RFC 7223)]

The desired state of the interface.  In RFC 7223 this leaf
has the same read semantics as ifAdminStatus.  Here, it
reflects the administrative state as set by enabling or
disabling the interface.]]>None</description></node><node access="read-only" datatype="enumeration" mandatory="true" name="oper-status" type="leaf" values="UP|DOWN|TESTING|UNKNOWN|DORMANT|NOT_PRESENT|LOWER_LAYER_DOWN"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The current operational state of the interface.

This leaf has the same semantics as ifOperStatus.[adapted from IETF interfaces model (RFC 7223)]

The current operational state of the interface.

This leaf has the same semantics as ifOperStatus.]]>None</description></node><node access="read-only" datatype="yang:date-and-time" name="last-change" type="leaf"><description><![CDATA[Date and time of the last state change of the interface
(e.g., up-to-down transition).   This corresponds to the
ifLastChange object in the standard interface MIB.Date and time of the last state change of the interface
(e.g., up-to-down transition).   This corresponds to the
ifLastChange object in the standard interface MIB.]]>None</description></node><node access="read-only" name="counters" type="container"><description><![CDATA[A collection of interface-related statistics objects.A collection of interface-related statistics objects.]]>None</description><node access="read-only" datatype="yang:counter64" name="in-octets" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of octets received on the interface,
including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of octets received on the interface,
including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-unicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were not addressed to a
multicast or broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were not addressed to a
multicast or broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-broadcast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a broadcast
address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a broadcast
address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-multicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]


The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a multicast
address at this sub-layer.  For a MAC-layer protocol,
this includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]


The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a multicast
address at this sub-layer.  For a MAC-layer protocol,
this includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-discards" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of inbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being deliverable to a higher-layer
protocol.  One possible reason for discarding such a
packet could be to free up buffer space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of inbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being deliverable to a higher-layer
protocol.  One possible reason for discarding such a
packet could be to free up buffer space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-errors" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of inbound
packets that contained errors preventing them from being
deliverable to a higher-layer protocol.  For character-
oriented or fixed-length interfaces, the number of
inbound transmission units that contained errors
preventing them from being deliverable to a higher-layer
protocol.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of inbound
packets that contained errors preventing them from being
deliverable to a higher-layer protocol.  For character-
oriented or fixed-length interfaces, the number of
inbound transmission units that contained errors
preventing them from being deliverable to a higher-layer
protocol.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter32" name="in-unknown-protos" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of packets
received via the interface that were discarded because
of an unknown or unsupported protocol.  For
character-oriented or fixed-length interfaces that
support protocol multiplexing, the number of
transmission units received via the interface that were
discarded because of an unknown or unsupported protocol.
For any interface that does not support protocol
multiplexing, this counter is not present.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of packets
received via the interface that were discarded because
of an unknown or unsupported protocol.  For
character-oriented or fixed-length interfaces that
support protocol multiplexing, the number of
transmission units received via the interface that were
discarded because of an unknown or unsupported protocol.
For any interface that does not support protocol
multiplexing, this counter is not present.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-octets" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of octets transmitted out of the
interface, including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of octets transmitted out of the
interface, including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-unicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were not addressed
to a multicast or broadcast address at this sub-layer,
including those that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were not addressed
to a multicast or broadcast address at this sub-layer,
including those that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-broadcast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
broadcast address at this sub-layer, including those
that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
broadcast address at this sub-layer, including those
that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-multicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
multicast address at this sub-layer, including those
that were discarded or not sent.  For a MAC-layer
protocol, this includes both Group and Functional
addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
multicast address at this sub-layer, including those
that were discarded or not sent.  For a MAC-layer
protocol, this includes both Group and Functional
addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-discards" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of outbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being transmitted.  One possible reason
for discarding such a packet could be to free up buffer
space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of outbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being transmitted.  One possible reason
for discarding such a packet could be to free up buffer
space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-errors" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of outbound
packets that could not be transmitted because of errors.
For character-oriented or fixed-length interfaces, the
number of outbound transmission units that could not be
transmitted because of errors.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of outbound
packets that could not be transmitted because of errors.
For character-oriented or fixed-length interfaces, the
number of outbound transmission units that could not be
transmitted because of errors.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:date-and-time" name="last-clear" type="leaf"><description><![CDATA[Indicates the last time the interface counters were
cleared.Indicates the last time the interface counters were
cleared.]]>None</description></node></node><node access="read-only" datatype="-&gt; /components/component/name" name="oc-platform:hardware-port" type="leaf"><description><![CDATA[References the hardware port in the device inventoryReferences the hardware port in the device inventory]]>None</description></node></node><node access="read-write" name="hold-time" type="container"><description><![CDATA[Top-level container for hold-time settings to enable
dampening advertisements of interface transitions.Top-level container for hold-time settings to enable
dampening advertisements of interface transitions.]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for interface hold-time settings.Configuration data for interface hold-time settings.]]>None</description><node access="read-write" datatype="uint32" name="up" type="leaf"><description><![CDATA[Dampens advertisement when the interface
transitions from down to up.  A zero value means dampening
is turned off, i.e., immediate notification.Dampens advertisement when the interface
transitions from down to up.  A zero value means dampening
is turned off, i.e., immediate notification.]]>None</description></node><node access="read-write" datatype="uint32" name="down" type="leaf"><description><![CDATA[Dampens advertisement when the interface transitions from
up to down.  A zero value means dampening is turned off,
i.e., immediate notification.Dampens advertisement when the interface transitions from
up to down.  A zero value means dampening is turned off,
i.e., immediate notification.]]>None</description></node><node access="read-write" datatype="uint32" name="oc-if-cisco:dampening-time" type="leaf"><description><![CDATA[Half-life for penalty time required for IOS-XE dampening.Half-life for penalty time required for IOS-XE dampening.]]>None</description></node><node access="read-write" datatype="uint32" name="oc-if-cisco:maximum-suppressing-time" type="leaf"><description><![CDATA[Add start suppressing time required for IOS-XE dampening.Add start suppressing time required for IOS-XE dampening.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for interface hold-time.Operational state data for interface hold-time.]]>None</description><node access="read-only" datatype="uint32" default="0" name="up" type="leaf"><description><![CDATA[Dampens advertisement when the interface
transitions from down to up.  A zero value means dampening
is turned off, i.e., immediate notification.Dampens advertisement when the interface
transitions from down to up.  A zero value means dampening
is turned off, i.e., immediate notification.]]>None</description></node><node access="read-only" datatype="uint32" default="0" name="down" type="leaf"><description><![CDATA[Dampens advertisement when the interface transitions from
up to down.  A zero value means dampening is turned off,
i.e., immediate notification.Dampens advertisement when the interface transitions from
up to down.  A zero value means dampening is turned off,
i.e., immediate notification.]]>None</description></node><node access="read-only" datatype="uint32" name="oc-if-cisco:dampening-time" type="leaf"><description><![CDATA[Half-life for penalty time required for IOS-XE dampening.Half-life for penalty time required for IOS-XE dampening.]]>None</description></node><node access="read-only" datatype="uint32" name="oc-if-cisco:maximum-suppressing-time" type="leaf"><description><![CDATA[Add start suppressing time required for IOS-XE dampening.Add start suppressing time required for IOS-XE dampening.]]>None</description></node></node></node><node access="read-write" name="subinterfaces" type="container"><description><![CDATA[Enclosing container for the list of subinterfaces associated
with a physical interfaceEnclosing container for the list of subinterfaces associated
with a physical interface]]>None</description><node access="read-write" key="index" name="subinterface" type="list"><description><![CDATA[The list of subinterfaces (logical interfaces) associated
with a physical interfaceThe list of subinterfaces (logical interfaces) associated
with a physical interface]]>None</description><node access="read-write" datatype="-&gt; ../config/index" is_key="true" mandatory="true" name="index" type="leaf"><description><![CDATA[The index number of the subinterface -- used to address
the logical interfaceThe index number of the subinterface -- used to address
the logical interface]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configurable items at the subinterface levelConfigurable items at the subinterface level]]>None</description><node access="read-write" datatype="uint32" default="0" name="index" type="leaf"><description><![CDATA[The index of the subinterface, or logical interface number.
On systems with no support for subinterfaces, or not using
subinterfaces, this value should default to 0, i.e., the
default subinterface.The index of the subinterface, or logical interface number.
On systems with no support for subinterfaces, or not using
subinterfaces, this value should default to 0, i.e., the
default subinterface.]]>None</description></node><node access="read-write" datatype="string" name="name" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.]]>None</description></node><node access="read-write" datatype="string" name="description" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.]]>None</description></node><node access="read-write" datatype="boolean" default="true" name="enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for logical interfacesOperational state data for logical interfaces]]>None</description><node access="read-only" datatype="uint32" default="0" name="index" type="leaf"><description><![CDATA[The index of the subinterface, or logical interface number.
On systems with no support for subinterfaces, or not using
subinterfaces, this value should default to 0, i.e., the
default subinterface.The index of the subinterface, or logical interface number.
On systems with no support for subinterfaces, or not using
subinterfaces, this value should default to 0, i.e., the
default subinterface.]]>None</description></node><node access="read-only" datatype="string" name="name" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.[adapted from IETF interfaces model (RFC 7223)]

The name of the interface.

A device MAY restrict the allowed values for this leaf,
possibly depending on the type of the interface.
For system-controlled interfaces, this leaf is the
device-specific name of the interface.  The 'config false'
list interfaces/interface[name]/state contains the currently
existing interfaces on the device.

If a client tries to create configuration for a
system-controlled interface that is not present in the
corresponding state list, the server MAY reject
the request if the implementation does not support
pre-provisioning of interfaces or if the name refers to
an interface that can never exist in the system.  A
NETCONF server MUST reply with an rpc-error with the
error-tag 'invalid-value' in this case.

The IETF model in RFC 7223 provides YANG features for the
following (i.e., pre-provisioning and arbitrary-names),
however they are omitted here:

 If the device supports pre-provisioning of interface
 configuration, the 'pre-provisioning' feature is
 advertised.

 If the device allows arbitrarily named user-controlled
 interfaces, the 'arbitrary-names' feature is advertised.

When a configured user-controlled interface is created by
the system, it is instantiated with the same name in the
/interfaces/interface[name]/state list.]]>None</description></node><node access="read-only" datatype="string" name="description" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.[adapted from IETF interfaces model (RFC 7223)]

A textual description of the interface.

A server implementation MAY map this leaf to the ifAlias
MIB object.  Such an implementation needs to use some
mechanism to handle the differences in size and characters
allowed between this leaf and ifAlias.  The definition of
such a mechanism is outside the scope of this document.

Since ifAlias is defined to be stored in non-volatile
storage, the MIB implementation MUST map ifAlias to the
value of 'description' in the persistently stored
datastore.

Specifically, if the device supports ':startup', when
ifAlias is read the device MUST return the value of
'description' in the 'startup' datastore, and when it is
written, it MUST be written to the 'running' and 'startup'
datastores.  Note that it is up to the implementation to

decide whether to modify this single leaf in 'startup' or
perform an implicit copy-config from 'running' to
'startup'.

If the device does not support ':startup', ifAlias MUST
be mapped to the 'description' leaf in the 'running'
datastore.]]>None</description></node><node access="read-only" datatype="boolean" default="true" name="enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.[adapted from IETF interfaces model (RFC 7223)]

This leaf contains the configured, desired state of the
interface.

Systems that implement the IF-MIB use the value of this
leaf in the 'running' datastore to set
IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
has been initialized, as described in RFC 2863.

Changes in this leaf in the 'running' datastore are
reflected in ifAdminStatus, but if ifAdminStatus is
changed over SNMP, this leaf is not affected.]]>None</description></node><node access="read-only" datatype="uint32" name="ifindex" type="leaf"><description><![CDATA[System assigned number for each interface.  Corresponds to
ifIndex object in SNMP Interface MIBSystem assigned number for each interface.  Corresponds to
ifIndex object in SNMP Interface MIB]]>None</description></node><node access="read-only" datatype="enumeration" mandatory="true" name="admin-status" type="leaf" values="UP|DOWN|TESTING"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The desired state of the interface.  In RFC 7223 this leaf
has the same read semantics as ifAdminStatus.  Here, it
reflects the administrative state as set by enabling or
disabling the interface.[adapted from IETF interfaces model (RFC 7223)]

The desired state of the interface.  In RFC 7223 this leaf
has the same read semantics as ifAdminStatus.  Here, it
reflects the administrative state as set by enabling or
disabling the interface.]]>None</description></node><node access="read-only" datatype="enumeration" mandatory="true" name="oper-status" type="leaf" values="UP|DOWN|TESTING|UNKNOWN|DORMANT|NOT_PRESENT|LOWER_LAYER_DOWN"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The current operational state of the interface.

This leaf has the same semantics as ifOperStatus.[adapted from IETF interfaces model (RFC 7223)]

The current operational state of the interface.

This leaf has the same semantics as ifOperStatus.]]>None</description></node><node access="read-only" datatype="yang:date-and-time" name="last-change" type="leaf"><description><![CDATA[Date and time of the last state change of the interface
(e.g., up-to-down transition).   This corresponds to the
ifLastChange object in the standard interface MIB.Date and time of the last state change of the interface
(e.g., up-to-down transition).   This corresponds to the
ifLastChange object in the standard interface MIB.]]>None</description></node><node access="read-only" name="counters" type="container"><description><![CDATA[A collection of interface-related statistics objects.A collection of interface-related statistics objects.]]>None</description><node access="read-only" datatype="yang:counter64" name="in-octets" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of octets received on the interface,
including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of octets received on the interface,
including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-unicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were not addressed to a
multicast or broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were not addressed to a
multicast or broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-broadcast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a broadcast
address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a broadcast
address at this sub-layer.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-multicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]


The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a multicast
address at this sub-layer.  For a MAC-layer protocol,
this includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]


The number of packets, delivered by this sub-layer to a
higher (sub-)layer, that were addressed to a multicast
address at this sub-layer.  For a MAC-layer protocol,
this includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-discards" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of inbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being deliverable to a higher-layer
protocol.  One possible reason for discarding such a
packet could be to free up buffer space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of inbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being deliverable to a higher-layer
protocol.  One possible reason for discarding such a
packet could be to free up buffer space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="in-errors" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of inbound
packets that contained errors preventing them from being
deliverable to a higher-layer protocol.  For character-
oriented or fixed-length interfaces, the number of
inbound transmission units that contained errors
preventing them from being deliverable to a higher-layer
protocol.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of inbound
packets that contained errors preventing them from being
deliverable to a higher-layer protocol.  For character-
oriented or fixed-length interfaces, the number of
inbound transmission units that contained errors
preventing them from being deliverable to a higher-layer
protocol.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter32" name="in-unknown-protos" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of packets
received via the interface that were discarded because
of an unknown or unsupported protocol.  For
character-oriented or fixed-length interfaces that
support protocol multiplexing, the number of
transmission units received via the interface that were
discarded because of an unknown or unsupported protocol.
For any interface that does not support protocol
multiplexing, this counter is not present.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of packets
received via the interface that were discarded because
of an unknown or unsupported protocol.  For
character-oriented or fixed-length interfaces that
support protocol multiplexing, the number of
transmission units received via the interface that were
discarded because of an unknown or unsupported protocol.
For any interface that does not support protocol
multiplexing, this counter is not present.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-octets" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of octets transmitted out of the
interface, including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of octets transmitted out of the
interface, including framing characters.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-unicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were not addressed
to a multicast or broadcast address at this sub-layer,
including those that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were not addressed
to a multicast or broadcast address at this sub-layer,
including those that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-broadcast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
broadcast address at this sub-layer, including those
that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
broadcast address at this sub-layer, including those
that were discarded or not sent.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-multicast-pkts" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
multicast address at this sub-layer, including those
that were discarded or not sent.  For a MAC-layer
protocol, this includes both Group and Functional
addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The total number of packets that higher-level protocols
requested be transmitted, and that were addressed to a
multicast address at this sub-layer, including those
that were discarded or not sent.  For a MAC-layer
protocol, this includes both Group and Functional
addresses.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-discards" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of outbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being transmitted.  One possible reason
for discarding such a packet could be to free up buffer
space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

The number of outbound packets that were chosen to be
discarded even though no errors had been detected to
prevent their being transmitted.  One possible reason
for discarding such a packet could be to free up buffer
space.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="out-errors" type="leaf"><description><![CDATA[[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of outbound
packets that could not be transmitted because of errors.
For character-oriented or fixed-length interfaces, the
number of outbound transmission units that could not be
transmitted because of errors.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.[adapted from IETF interfaces model (RFC 7223)]
Changed the counter type to counter64.

For packet-oriented interfaces, the number of outbound
packets that could not be transmitted because of errors.
For character-oriented or fixed-length interfaces, the
number of outbound transmission units that could not be
transmitted because of errors.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by the value of
'discontinuity-time'.]]>None</description></node><node access="read-only" datatype="yang:date-and-time" name="last-clear" type="leaf"><description><![CDATA[Indicates the last time the interface counters were
cleared.Indicates the last time the interface counters were
cleared.]]>None</description></node></node></node><node access="read-write" name="oc-ip:ipv4" type="container"><description><![CDATA[Parameters for the IPv4 address family.Parameters for the IPv4 address family.]]>None</description><node access="read-write" name="oc-ip:addresses" type="container"><description><![CDATA[Enclosing container for address listEnclosing container for address list]]>None</description><node access="read-write" key="ip" name="oc-ip:address" type="list"><description><![CDATA[The list of configured IPv4 addresses on the interface.The list of configured IPv4 addresses on the interface.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each configured IPv4
address on the interfaceConfiguration data for each configured IPv4
address on the interface]]>None</description><node access="read-write" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.]]>None</description></node><node access="read-write" datatype="uint8" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for each IPv4 address
configured on the interfaceOperational state data for each IPv4 address
configured on the interface]]>None</description><node access="read-only" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.]]>None</description></node><node access="read-only" datatype="uint8" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node><node access="read-only" datatype="ip-address-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DHCP|LINK_LAYER|RANDOM"><description><![CDATA[The origin of this address, e.g., statically configured,
assigned by DHCP, etc..The origin of this address, e.g., statically configured,
assigned by DHCP, etc..]]>None</description></node></node><node access="read-write" name="oc-ip:vrrp" type="container"><description><![CDATA[Enclosing container for VRRP groups handled by this
IP interfaceEnclosing container for VRRP groups handled by this
IP interface]]>None</description><node access="read-write" key="virtual-router-id" name="oc-ip:vrrp-group" type="list"><description><![CDATA[List of VRRP groups, keyed by virtual router idList of VRRP groups, keyed by virtual router id]]>None</description><node access="read-write" datatype="-&gt; ../config/virtual-router-id" is_key="true" mandatory="true" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[References the configured virtual router id for this
VRRP groupReferences the configured virtual router id for this
VRRP group]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for the VRRP groupConfiguration data for the VRRP group]]>None</description><node access="read-write" datatype="uint8" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[Set the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP groupSet the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP group]]>None</description></node><node access="read-write" datatype="inet:ip-address" name="oc-ip:virtual-address" type="leaf-list"><description><![CDATA[Configure one or more virtual addresses for the
VRRP groupConfigure one or more virtual addresses for the
VRRP group]]>None</description></node><node access="read-write" datatype="uint8" default="100" name="oc-ip:priority" type="leaf"><description><![CDATA[Specifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
prioritySpecifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
priority]]>None</description></node><node access="read-write" datatype="boolean" default="true" name="oc-ip:preempt" type="leaf" values="true|false"><description><![CDATA[When set to true, enables preemption by a higher
priority backup router of a lower priority master routerWhen set to true, enables preemption by a higher
priority backup router of a lower priority master router]]>None</description></node><node access="read-write" datatype="uint16" default="0" name="oc-ip:preempt-delay" type="leaf"><description><![CDATA[Set the delay the higher priority router waits
before preemptingSet the delay the higher priority router waits
before preempting]]>None</description></node><node access="read-write" datatype="boolean" default="false" name="oc-ip:accept-mode" type="leaf" values="true|false"><description><![CDATA[Configure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interfaceConfigure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interface]]>None</description></node><node access="read-write" datatype="uint16" default="100" name="oc-ip:advertisement-interval" type="leaf"><description><![CDATA[Sets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
secondsSets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
seconds]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for the VRRP groupOperational state data for the VRRP group]]>None</description><node access="read-only" datatype="uint8" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[Set the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP groupSet the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP group]]>None</description></node><node access="read-only" datatype="inet:ip-address" name="oc-ip:virtual-address" type="leaf-list"><description><![CDATA[Configure one or more virtual addresses for the
VRRP groupConfigure one or more virtual addresses for the
VRRP group]]>None</description></node><node access="read-only" datatype="uint8" default="100" name="oc-ip:priority" type="leaf"><description><![CDATA[Specifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
prioritySpecifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
priority]]>None</description></node><node access="read-only" datatype="boolean" default="true" name="oc-ip:preempt" type="leaf" values="true|false"><description><![CDATA[When set to true, enables preemption by a higher
priority backup router of a lower priority master routerWhen set to true, enables preemption by a higher
priority backup router of a lower priority master router]]>None</description></node><node access="read-only" datatype="uint16" default="0" name="oc-ip:preempt-delay" type="leaf"><description><![CDATA[Set the delay the higher priority router waits
before preemptingSet the delay the higher priority router waits
before preempting]]>None</description></node><node access="read-only" datatype="boolean" default="false" name="oc-ip:accept-mode" type="leaf" values="true|false"><description><![CDATA[Configure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interfaceConfigure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interface]]>None</description></node><node access="read-only" datatype="uint16" default="100" name="oc-ip:advertisement-interval" type="leaf"><description><![CDATA[Sets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
secondsSets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
seconds]]>None</description></node><node access="read-only" datatype="uint8" name="oc-ip:current-priority" type="leaf"><description><![CDATA[Operational value of the priority for the
interface in the VRRP groupOperational value of the priority for the
interface in the VRRP group]]>None</description></node></node><node access="read-write" name="oc-ip:interface-tracking" type="container"><description><![CDATA[Top-level container for VRRP interface trackingTop-level container for VRRP interface tracking]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for VRRP interface trackingConfiguration data for VRRP interface tracking]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:track-interface" type="leaf"><description><![CDATA[Sets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficientlySets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficiently]]>None</description></node><node access="read-write" datatype="uint8" default="0" name="oc-ip:priority-decrement" type="leaf"><description><![CDATA[Set the value to subtract from priority when
the tracked interface goes downSet the value to subtract from priority when
the tracked interface goes down]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for VRRP interface trackingOperational state data for VRRP interface tracking]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:track-interface" type="leaf"><description><![CDATA[Sets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficientlySets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficiently]]>None</description></node><node access="read-only" datatype="uint8" default="0" name="oc-ip:priority-decrement" type="leaf"><description><![CDATA[Set the value to subtract from priority when
the tracked interface goes downSet the value to subtract from priority when
the tracked interface goes down]]>None</description></node></node></node></node></node></node></node><node access="read-write" name="oc-ip:neighbors" type="container"><description><![CDATA[Enclosing container for neighbor listEnclosing container for neighbor list]]>None</description><node access="read-write" key="ip" name="oc-ip:neighbor" type="list"><description><![CDATA[A list of mappings from IPv4 addresses to
link-layer addresses.

Entries in this list are used as static entries in the
ARP Cache.A list of mappings from IPv4 addresses to
link-layer addresses.

Entries in this list are used as static entries in the
ARP Cache.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each configured IPv4
address on the interfaceConfiguration data for each configured IPv4
address on the interface]]>None</description><node access="read-write" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[The IPv4 address of the neighbor node.The IPv4 address of the neighbor node.]]>None</description></node><node access="read-write" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[The link-layer address of the neighbor node.The link-layer address of the neighbor node.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for each IPv4 address
configured on the interfaceOperational state data for each IPv4 address
configured on the interface]]>None</description><node access="read-only" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[The IPv4 address of the neighbor node.The IPv4 address of the neighbor node.]]>None</description></node><node access="read-only" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[The link-layer address of the neighbor node.The link-layer address of the neighbor node.]]>None</description></node><node access="read-only" datatype="neighbor-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DYNAMIC"><description><![CDATA[The origin of this neighbor entry, static or dynamic.The origin of this neighbor entry, static or dynamic.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:unnumbered" type="container"><description><![CDATA[Top-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address informationTop-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address information]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for unnumbered interfaceConfiguration data for unnumbered interface]]>None</description><node access="read-write" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for unnumbered interfacesOperational state data for unnumbered interfaces]]>None</description><node access="read-only" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-write" name="oc-ip:interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterfaceReference to an interface or subinterface]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configured reference to interface / subinterfaceConfigured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state for interface-refOperational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Top-level IPv4 configuration data for the interfaceTop-level IPv4 configuration data for the interface]]>None</description><node access="read-write" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.]]>None</description></node><node access="read-write" datatype="uint16" name="oc-ip:mtu" type="leaf"><description><![CDATA[The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Top level IPv4 operational state dataTop level IPv4 operational state data]]>None</description><node access="read-only" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.]]>None</description></node><node access="read-only" datatype="uint16" name="oc-ip:mtu" type="leaf"><description><![CDATA[The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node></node></node><node access="read-write" name="oc-ip:ipv6" type="container"><description><![CDATA[Parameters for the IPv6 address family.Parameters for the IPv6 address family.]]>None</description><node access="read-write" name="oc-ip:addresses" type="container"><description><![CDATA[Enclosing container for address listEnclosing container for address list]]>None</description><node access="read-write" key="ip" name="oc-ip:address" type="list"><description><![CDATA[The list of configured IPv6 addresses on the interface.The list of configured IPv6 addresses on the interface.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each IPv6 address on
the interfaceConfiguration data for each IPv6 address on
the interface]]>None</description><node access="read-write" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.]]>None</description></node><node access="read-write" datatype="uint8" mandatory="true" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[State data for each IPv6 address on the
interfaceState data for each IPv6 address on the
interface]]>None</description><node access="read-only" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.]]>None</description></node><node access="read-only" datatype="uint8" mandatory="true" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node><node access="read-only" datatype="ip-address-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DHCP|LINK_LAYER|RANDOM"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The origin of this address, e.g., static, dhcp, etc.[adapted from IETF IP model RFC 7277]

The origin of this address, e.g., static, dhcp, etc.]]>None</description></node><node access="read-only" datatype="enumeration" name="oc-ip:status" type="leaf" values="PREFERRED|DEPRECATED|INVALID|INACCESSIBLE|UNKNOWN|TENTATIVE|DUPLICATE|OPTIMISTIC"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The status of an address.  Most of the states correspond
to states from the IPv6 Stateless Address
Autoconfiguration protocol.[adapted from IETF IP model RFC 7277]

The status of an address.  Most of the states correspond
to states from the IPv6 Stateless Address
Autoconfiguration protocol.]]>None</description></node></node><node access="read-write" name="oc-ip:vrrp" type="container"><description><![CDATA[Enclosing container for VRRP groups handled by this
IP interfaceEnclosing container for VRRP groups handled by this
IP interface]]>None</description><node access="read-write" key="virtual-router-id" name="oc-ip:vrrp-group" type="list"><description><![CDATA[List of VRRP groups, keyed by virtual router idList of VRRP groups, keyed by virtual router id]]>None</description><node access="read-write" datatype="-&gt; ../config/virtual-router-id" is_key="true" mandatory="true" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[References the configured virtual router id for this
VRRP groupReferences the configured virtual router id for this
VRRP group]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for the VRRP groupConfiguration data for the VRRP group]]>None</description><node access="read-write" datatype="uint8" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[Set the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP groupSet the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP group]]>None</description></node><node access="read-write" datatype="inet:ip-address" name="oc-ip:virtual-address" type="leaf-list"><description><![CDATA[Configure one or more virtual addresses for the
VRRP groupConfigure one or more virtual addresses for the
VRRP group]]>None</description></node><node access="read-write" datatype="uint8" default="100" name="oc-ip:priority" type="leaf"><description><![CDATA[Specifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
prioritySpecifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
priority]]>None</description></node><node access="read-write" datatype="boolean" default="true" name="oc-ip:preempt" type="leaf" values="true|false"><description><![CDATA[When set to true, enables preemption by a higher
priority backup router of a lower priority master routerWhen set to true, enables preemption by a higher
priority backup router of a lower priority master router]]>None</description></node><node access="read-write" datatype="uint16" default="0" name="oc-ip:preempt-delay" type="leaf"><description><![CDATA[Set the delay the higher priority router waits
before preemptingSet the delay the higher priority router waits
before preempting]]>None</description></node><node access="read-write" datatype="boolean" default="false" name="oc-ip:accept-mode" type="leaf" values="true|false"><description><![CDATA[Configure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interfaceConfigure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interface]]>None</description></node><node access="read-write" datatype="uint16" default="100" name="oc-ip:advertisement-interval" type="leaf"><description><![CDATA[Sets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
secondsSets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
seconds]]>None</description></node><node access="read-write" datatype="inet:ip-address" name="oc-ip:virtual-link-local" type="leaf"><description><![CDATA[For VRRP on IPv6 interfaces, sets the virtual link local
addressFor VRRP on IPv6 interfaces, sets the virtual link local
address]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for the VRRP groupOperational state data for the VRRP group]]>None</description><node access="read-only" datatype="uint8" name="oc-ip:virtual-router-id" type="leaf"><description><![CDATA[Set the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP groupSet the virtual router id for use by the VRRP group.  This
usually also determines the virtual MAC address that is
generated for the VRRP group]]>None</description></node><node access="read-only" datatype="inet:ip-address" name="oc-ip:virtual-address" type="leaf-list"><description><![CDATA[Configure one or more virtual addresses for the
VRRP groupConfigure one or more virtual addresses for the
VRRP group]]>None</description></node><node access="read-only" datatype="uint8" default="100" name="oc-ip:priority" type="leaf"><description><![CDATA[Specifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
prioritySpecifies the sending VRRP interface's priority
for the virtual router.  Higher values equal higher
priority]]>None</description></node><node access="read-only" datatype="boolean" default="true" name="oc-ip:preempt" type="leaf" values="true|false"><description><![CDATA[When set to true, enables preemption by a higher
priority backup router of a lower priority master routerWhen set to true, enables preemption by a higher
priority backup router of a lower priority master router]]>None</description></node><node access="read-only" datatype="uint16" default="0" name="oc-ip:preempt-delay" type="leaf"><description><![CDATA[Set the delay the higher priority router waits
before preemptingSet the delay the higher priority router waits
before preempting]]>None</description></node><node access="read-only" datatype="boolean" default="false" name="oc-ip:accept-mode" type="leaf" values="true|false"><description><![CDATA[Configure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interfaceConfigure whether packets destined for
virtual addresses are accepted even when the virtual
address is not owned by the router interface]]>None</description></node><node access="read-only" datatype="uint16" default="100" name="oc-ip:advertisement-interval" type="leaf"><description><![CDATA[Sets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
secondsSets the interval between successive VRRP
advertisements -- RFC 5798 defines this as a 12-bit
value expressed as 0.1 seconds, with default 100, i.e.,
1 second.  Several implementation express this in units of
seconds]]>None</description></node><node access="read-only" datatype="uint8" name="oc-ip:current-priority" type="leaf"><description><![CDATA[Operational value of the priority for the
interface in the VRRP groupOperational value of the priority for the
interface in the VRRP group]]>None</description></node><node access="read-only" datatype="inet:ip-address" name="oc-ip:virtual-link-local" type="leaf"><description><![CDATA[For VRRP on IPv6 interfaces, sets the virtual link local
addressFor VRRP on IPv6 interfaces, sets the virtual link local
address]]>None</description></node></node><node access="read-write" name="oc-ip:interface-tracking" type="container"><description><![CDATA[Top-level container for VRRP interface trackingTop-level container for VRRP interface tracking]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for VRRP interface trackingConfiguration data for VRRP interface tracking]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:track-interface" type="leaf"><description><![CDATA[Sets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficientlySets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficiently]]>None</description></node><node access="read-write" datatype="uint8" default="0" name="oc-ip:priority-decrement" type="leaf"><description><![CDATA[Set the value to subtract from priority when
the tracked interface goes downSet the value to subtract from priority when
the tracked interface goes down]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for VRRP interface trackingOperational state data for VRRP interface tracking]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:track-interface" type="leaf"><description><![CDATA[Sets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficientlySets an interface that should be
tracked for up/down events to dynamically change the
priority state of the VRRP group, and potentially
change the mastership if the tracked interface going
down lowers the priority sufficiently]]>None</description></node><node access="read-only" datatype="uint8" default="0" name="oc-ip:priority-decrement" type="leaf"><description><![CDATA[Set the value to subtract from priority when
the tracked interface goes downSet the value to subtract from priority when
the tracked interface goes down]]>None</description></node></node></node></node></node></node></node><node access="read-write" name="oc-ip:neighbors" type="container"><description><![CDATA[Enclosing container for list of IPv6 neighborsEnclosing container for list of IPv6 neighbors]]>None</description><node access="read-write" key="ip" name="oc-ip:neighbor" type="list"><description><![CDATA[List of IPv6 neighborsList of IPv6 neighbors]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP neighbor addressReferences the configured IP neighbor address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each IPv6 address on
the interfaceConfiguration data for each IPv6 address on
the interface]]>None</description><node access="read-write" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.]]>None</description></node><node access="read-write" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[State data for each IPv6 address on the
interfaceState data for each IPv6 address on the
interface]]>None</description><node access="read-only" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.]]>None</description></node><node access="read-only" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.]]>None</description></node><node access="read-only" datatype="neighbor-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DYNAMIC"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The origin of this neighbor entry.[adapted from IETF IP model RFC 7277]

The origin of this neighbor entry.]]>None</description></node><node access="read-only" datatype="empty" name="oc-ip:is-router" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Indicates that the neighbor node acts as a router.[adapted from IETF IP model RFC 7277]

Indicates that the neighbor node acts as a router.]]>None</description></node><node access="read-only" datatype="enumeration" name="oc-ip:neighbor-state" type="leaf" values="INCOMPLETE|REACHABLE|STALE|DELAY|PROBE"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The Neighbor Unreachability Detection state of this
entry.[adapted from IETF IP model RFC 7277]

The Neighbor Unreachability Detection state of this
entry.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:unnumbered" type="container"><description><![CDATA[Top-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address informationTop-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address information]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for unnumbered interfaceConfiguration data for unnumbered interface]]>None</description><node access="read-write" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for unnumbered interfacesOperational state data for unnumbered interfaces]]>None</description><node access="read-only" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-write" name="oc-ip:interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterfaceReference to an interface or subinterface]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configured reference to interface / subinterfaceConfigured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state for interface-refOperational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Top-level config data for the IPv6 interfaceTop-level config data for the IPv6 interface]]>None</description><node access="read-write" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.]]>None</description></node><node access="read-write" datatype="uint32" name="oc-ip:mtu" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node><node access="read-write" datatype="uint32" default="1" name="oc-ip:dup-addr-detect-transmits" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Top-level operational state data for the IPv6 interfaceTop-level operational state data for the IPv6 interface]]>None</description><node access="read-only" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.]]>None</description></node><node access="read-only" datatype="uint32" name="oc-ip:mtu" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node><node access="read-only" datatype="uint32" default="1" name="oc-ip:dup-addr-detect-transmits" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.]]>None</description></node></node><node access="read-write" name="oc-ip-ext:autoconf" type="container"><description><![CDATA[Top-level container for IPv6 autoconfTop-level container for IPv6 autoconf]]>None</description><node access="read-write" name="oc-ip-ext:config" type="container"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Parameters to control the autoconfiguration of IPv6
addresses, as described in RFC 4862.[adapted from IETF IP model RFC 7277]

Parameters to control the autoconfiguration of IPv6
addresses, as described in RFC 4862.]]>None</description><node access="read-write" datatype="boolean" default="true" name="oc-ip-ext:create-global-addresses" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

If enabled, the host creates global addresses as
described in RFC 4862.[adapted from IETF IP model RFC 7277]

If enabled, the host creates global addresses as
described in RFC 4862.]]>None</description></node><node access="read-write" datatype="boolean" default="false" name="oc-ip-ext:create-temporary-addresses" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

If enabled, the host creates temporary addresses as
described in RFC 4941.[adapted from IETF IP model RFC 7277]

If enabled, the host creates temporary addresses as
described in RFC 4941.]]>None</description></node><node access="read-write" datatype="uint32" default="604800" name="oc-ip-ext:temporary-valid-lifetime" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The time period during which the temporary address
is valid.[adapted from IETF IP model RFC 7277]

The time period during which the temporary address
is valid.]]>None</description></node><node access="read-write" datatype="uint32" default="86400" name="oc-ip-ext:temporary-preferred-lifetime" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The time period during which the temporary address is
preferred.[adapted from IETF IP model RFC 7277]

The time period during which the temporary address is
preferred.]]>None</description></node></node><node access="read-only" name="oc-ip-ext:state" type="container"><description><![CDATA[Operational state data Operational state data ]]>None</description><node access="read-only" datatype="boolean" default="true" name="oc-ip-ext:create-global-addresses" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

If enabled, the host creates global addresses as
described in RFC 4862.[adapted from IETF IP model RFC 7277]

If enabled, the host creates global addresses as
described in RFC 4862.]]>None</description></node><node access="read-only" datatype="boolean" default="false" name="oc-ip-ext:create-temporary-addresses" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

If enabled, the host creates temporary addresses as
described in RFC 4941.[adapted from IETF IP model RFC 7277]

If enabled, the host creates temporary addresses as
described in RFC 4941.]]>None</description></node><node access="read-only" datatype="uint32" default="604800" name="oc-ip-ext:temporary-valid-lifetime" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The time period during which the temporary address
is valid.[adapted from IETF IP model RFC 7277]

The time period during which the temporary address
is valid.]]>None</description></node><node access="read-only" datatype="uint32" default="86400" name="oc-ip-ext:temporary-preferred-lifetime" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The time period during which the temporary address is
preferred.[adapted from IETF IP model RFC 7277]

The time period during which the temporary address is
preferred.]]>None</description></node></node></node></node></node></node><node access="read-write" name="oc-eth:ethernet" type="container"><description><![CDATA[Top-level container for ethernet configuration
and stateTop-level container for ethernet configuration
and state]]>None</description><node access="read-write" name="oc-eth:config" type="container"><description><![CDATA[Configuration data for ethernet interfacesConfiguration data for ethernet interfaces]]>None</description><node access="read-write" datatype="yang:mac-address" name="oc-eth:mac-address" type="leaf"><description><![CDATA[Assigns a MAC address to the Ethernet interface.  If not
specified, the corresponding operational state leaf is
expected to show the system-assigned MAC address.Assigns a MAC address to the Ethernet interface.  If not
specified, the corresponding operational state leaf is
expected to show the system-assigned MAC address.]]>None</description></node><node access="read-write" datatype="boolean" name="oc-eth:auto-negotiate" type="leaf" values="true|false"><description><![CDATA[Set to TRUE to request the interface to auto-negotiate
transmission parameters with its peer interface.  When
set to FALSE, the transmission parameters are specified
manually.Set to TRUE to request the interface to auto-negotiate
transmission parameters with its peer interface.  When
set to FALSE, the transmission parameters are specified
manually.]]>None</description></node><node access="read-write" datatype="enumeration" name="oc-eth:duplex-mode" type="leaf" values="FULL|HALF"><description><![CDATA[When auto-negotiate is TRUE, this optionally sets the
duplex mode that will be advertised to the peer.  If
unspecified, the interface should negotiate the duplex mode
directly (typically full-duplex).  When auto-negotiate is
FALSE, this sets the duplex mode on the interface directly.When auto-negotiate is TRUE, this optionally sets the
duplex mode that will be advertised to the peer.  If
unspecified, the interface should negotiate the duplex mode
directly (typically full-duplex).  When auto-negotiate is
FALSE, this sets the duplex mode on the interface directly.]]>None</description></node><node access="read-write" datatype="identityref:ETHERNET_SPEED" name="oc-eth:port-speed" type="leaf"><description><![CDATA[When auto-negotiate is TRUE, this optionally sets the
port-speed mode that will be advertised to the peer for
negotiation.  If unspecified, it is expected that the
interface will select the highest speed available based on
negotiation.  When auto-negotiate is set to FALSE, sets the
link speed to a fixed value -- supported values are defined
by ETHERNET_SPEED identitiesWhen auto-negotiate is TRUE, this optionally sets the
port-speed mode that will be advertised to the peer for
negotiation.  If unspecified, it is expected that the
interface will select the highest speed available based on
negotiation.  When auto-negotiate is set to FALSE, sets the
link speed to a fixed value -- supported values are defined
by ETHERNET_SPEED identities]]>None</description></node><node access="read-write" datatype="boolean" name="oc-eth:enable-flow-control" type="leaf" values="true|false"><description><![CDATA[Enable or disable flow control for this interface.
Ethernet flow control is a mechanism by which a receiver
may send PAUSE frames to a sender to stop transmission for
a specified time.

This setting should override auto-negotiated flow control
settings.  If left unspecified, and auto-negotiate is TRUE,
flow control mode is negotiated with the peer interface.Enable or disable flow control for this interface.
Ethernet flow control is a mechanism by which a receiver
may send PAUSE frames to a sender to stop transmission for
a specified time.

This setting should override auto-negotiated flow control
settings.  If left unspecified, and auto-negotiate is TRUE,
flow control mode is negotiated with the peer interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-lag:aggregate-id" type="leaf"><description><![CDATA[Specify the logical aggregate interface to which
this interface belongsSpecify the logical aggregate interface to which
this interface belongs]]>None</description></node><node access="read-write" datatype="boolean" name="cisco-if-eth:switchport" type="leaf" values="true|false"><description><![CDATA[If false the switch port is a routed port and can have an ip address.If false the switch port is a routed port and can have an ip address.]]>None</description></node></node><node access="read-write" name="oc-vlan:switched-vlan" type="container"><description><![CDATA[Enclosing container for VLAN interface-specific
data on Ethernet interfaces.  These are for standard
L2, switched-style VLANs.Enclosing container for VLAN interface-specific
data on Ethernet interfaces.  These are for standard
L2, switched-style VLANs.]]>None</description><node access="read-write" name="oc-vlan:config" type="container"><description><![CDATA[Configuration parameters for VLANsConfiguration parameters for VLANs]]>None</description><node access="read-write" datatype="oc-vlan-types:vlan-mode-type" name="oc-vlan:interface-mode" type="leaf" values="ACCESS|TRUNK"><description><![CDATA[Set the interface to access or trunk mode for
VLANsSet the interface to access or trunk mode for
VLANs]]>None</description></node><node access="read-write" datatype="union" name="oc-vlan:native-vlan" type="leaf"><description><![CDATA[Set the native VLAN id for untagged frames arriving on
a trunk interface.  This configuration is only valid on
a trunk interface.Set the native VLAN id for untagged frames arriving on
a trunk interface.  This configuration is only valid on
a trunk interface.]]>None</description></node><node access="read-write" datatype="union" name="oc-vlan:access-vlan" type="leaf"><description><![CDATA[Assign the access vlan to the access port.Assign the access vlan to the access port.]]>None</description></node><node access="read-write" datatype="union" name="oc-vlan:trunk-vlans" type="leaf-list"><description><![CDATA[Specify VLANs, or ranges thereof, that the interface may
carry when in trunk mode.  If not specified, all VLANs are
allowed on the interface. Ranges are specified in the form
x..y, where x&lty - ranges are assumed to be inclusive (such
that the VLAN range is x &lt= range &lt= y.Specify VLANs, or ranges thereof, that the interface may
carry when in trunk mode.  If not specified, all VLANs are
allowed on the interface. Ranges are specified in the form
x..y, where x<y - ranges are assumed to be inclusive (such
that the VLAN range is x <= range <= y.]]>None</description></node></node><node access="read-only" name="oc-vlan:state" type="container"><description><![CDATA[State variables for VLANsState variables for VLANs]]>None</description><node access="read-only" datatype="oc-vlan-types:vlan-mode-type" name="oc-vlan:interface-mode" type="leaf" values="ACCESS|TRUNK"><description><![CDATA[Set the interface to access or trunk mode for
VLANsSet the interface to access or trunk mode for
VLANs]]>None</description></node><node access="read-only" datatype="union" name="oc-vlan:native-vlan" type="leaf"><description><![CDATA[Set the native VLAN id for untagged frames arriving on
a trunk interface.  This configuration is only valid on
a trunk interface.Set the native VLAN id for untagged frames arriving on
a trunk interface.  This configuration is only valid on
a trunk interface.]]>None</description></node><node access="read-only" datatype="union" name="oc-vlan:access-vlan" type="leaf"><description><![CDATA[Assign the access vlan to the access port.Assign the access vlan to the access port.]]>None</description></node><node access="read-only" datatype="union" name="oc-vlan:trunk-vlans" type="leaf-list"><description><![CDATA[Specify VLANs, or ranges thereof, that the interface may
carry when in trunk mode.  If not specified, all VLANs are
allowed on the interface. Ranges are specified in the form
x..y, where x&lty - ranges are assumed to be inclusive (such
that the VLAN range is x &lt= range &lt= y.Specify VLANs, or ranges thereof, that the interface may
carry when in trunk mode.  If not specified, all VLANs are
allowed on the interface. Ranges are specified in the form
x..y, where x<y - ranges are assumed to be inclusive (such
that the VLAN range is x <= range <= y.]]>None</description></node></node></node></node><node access="read-write" name="oc-vlan:routed-vlan" type="container"><description><![CDATA[Top-level container for routed vlan interfaces.  These
logical interfaces are also known as SVI (switched virtual
interface), IRB (integrated routing and bridging), RVI
(routed VLAN interface)Top-level container for routed vlan interfaces.  These
logical interfaces are also known as SVI (switched virtual
interface), IRB (integrated routing and bridging), RVI
(routed VLAN interface)]]>None</description><node access="read-write" name="oc-vlan:config" type="container"><description><![CDATA[Configuration data for routed vlan interfacesConfiguration data for routed vlan interfaces]]>None</description><node access="read-write" datatype="union" name="oc-vlan:vlan" type="leaf"><description><![CDATA[References the VLAN for which this IP interface
provides routing services -- similar to a switch virtual
interface (SVI), or integrated routing and bridging interface
(IRB) in some implementations.References the VLAN for which this IP interface
provides routing services -- similar to a switch virtual
interface (SVI), or integrated routing and bridging interface
(IRB) in some implementations.]]>None</description></node></node><node access="read-only" name="oc-vlan:state" type="container"><description><![CDATA[Operational state data Operational state data ]]>None</description><node access="read-only" datatype="union" name="oc-vlan:vlan" type="leaf"><description><![CDATA[References the VLAN for which this IP interface
provides routing services -- similar to a switch virtual
interface (SVI), or integrated routing and bridging interface
(IRB) in some implementations.References the VLAN for which this IP interface
provides routing services -- similar to a switch virtual
interface (SVI), or integrated routing and bridging interface
(IRB) in some implementations.]]>None</description></node></node><node access="read-write" name="oc-ip:ipv4" type="container"><description><![CDATA[Parameters for the IPv4 address family.Parameters for the IPv4 address family.]]>None</description><node access="read-write" name="oc-ip:addresses" type="container"><description><![CDATA[Enclosing container for address listEnclosing container for address list]]>None</description><node access="read-write" key="ip" name="oc-ip:address" type="list"><description><![CDATA[The list of configured IPv4 addresses on the interface.The list of configured IPv4 addresses on the interface.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each configured IPv4
address on the interfaceConfiguration data for each configured IPv4
address on the interface]]>None</description><node access="read-write" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.]]>None</description></node><node access="read-write" datatype="uint8" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for each IPv4 address
configured on the interfaceOperational state data for each IPv4 address
configured on the interface]]>None</description><node access="read-only" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv4 address on the interface.]]>None</description></node><node access="read-only" datatype="uint8" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node><node access="read-only" datatype="ip-address-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DHCP|LINK_LAYER|RANDOM"><description><![CDATA[The origin of this address, e.g., statically configured,
assigned by DHCP, etc..The origin of this address, e.g., statically configured,
assigned by DHCP, etc..]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:neighbors" type="container"><description><![CDATA[Enclosing container for neighbor listEnclosing container for neighbor list]]>None</description><node access="read-write" key="ip" name="oc-ip:neighbor" type="list"><description><![CDATA[A list of mappings from IPv4 addresses to
link-layer addresses.

Entries in this list are used as static entries in the
ARP Cache.A list of mappings from IPv4 addresses to
link-layer addresses.

Entries in this list are used as static entries in the
ARP Cache.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each configured IPv4
address on the interfaceConfiguration data for each configured IPv4
address on the interface]]>None</description><node access="read-write" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[The IPv4 address of the neighbor node.The IPv4 address of the neighbor node.]]>None</description></node><node access="read-write" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[The link-layer address of the neighbor node.The link-layer address of the neighbor node.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for each IPv4 address
configured on the interfaceOperational state data for each IPv4 address
configured on the interface]]>None</description><node access="read-only" datatype="inet:ipv4-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[The IPv4 address of the neighbor node.The IPv4 address of the neighbor node.]]>None</description></node><node access="read-only" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[The link-layer address of the neighbor node.The link-layer address of the neighbor node.]]>None</description></node><node access="read-only" datatype="neighbor-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DYNAMIC"><description><![CDATA[The origin of this neighbor entry, static or dynamic.The origin of this neighbor entry, static or dynamic.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:unnumbered" type="container"><description><![CDATA[Top-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address informationTop-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address information]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for unnumbered interfaceConfiguration data for unnumbered interface]]>None</description><node access="read-write" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for unnumbered interfacesOperational state data for unnumbered interfaces]]>None</description><node access="read-only" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-write" name="oc-ip:interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterfaceReference to an interface or subinterface]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configured reference to interface / subinterfaceConfigured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state for interface-refOperational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Top-level IPv4 configuration data for the interfaceTop-level IPv4 configuration data for the interface]]>None</description><node access="read-write" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.]]>None</description></node><node access="read-write" datatype="uint16" name="oc-ip:mtu" type="leaf"><description><![CDATA[The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Top level IPv4 operational state dataTop level IPv4 operational state data]]>None</description><node access="read-only" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.Controls whether IPv4 is enabled or disabled on this
interface.  When IPv4 is enabled, this interface is
connected to an IPv4 stack, and the interface can send
and receive IPv4 packets.]]>None</description></node><node access="read-only" datatype="uint16" name="oc-ip:mtu" type="leaf"><description><![CDATA[The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.The size, in octets, of the largest IPv4 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node></node></node><node access="read-write" name="oc-ip:ipv6" type="container"><description><![CDATA[Parameters for the IPv6 address family.Parameters for the IPv6 address family.]]>None</description><node access="read-write" name="oc-ip:addresses" type="container"><description><![CDATA[Enclosing container for address listEnclosing container for address list]]>None</description><node access="read-write" key="ip" name="oc-ip:address" type="list"><description><![CDATA[The list of configured IPv6 addresses on the interface.The list of configured IPv6 addresses on the interface.]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP addressReferences the configured IP address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each IPv6 address on
the interfaceConfiguration data for each IPv6 address on
the interface]]>None</description><node access="read-write" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.]]>None</description></node><node access="read-write" datatype="uint8" mandatory="true" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[State data for each IPv6 address on the
interfaceState data for each IPv6 address on the
interface]]>None</description><node access="read-only" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.[adapted from IETF IP model RFC 7277]

The IPv6 address on the interface.]]>None</description></node><node access="read-only" datatype="uint8" mandatory="true" name="oc-ip:prefix-length" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.[adapted from IETF IP model RFC 7277]

The length of the subnet prefix.]]>None</description></node><node access="read-only" datatype="ip-address-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DHCP|LINK_LAYER|RANDOM"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The origin of this address, e.g., static, dhcp, etc.[adapted from IETF IP model RFC 7277]

The origin of this address, e.g., static, dhcp, etc.]]>None</description></node><node access="read-only" datatype="enumeration" name="oc-ip:status" type="leaf" values="PREFERRED|DEPRECATED|INVALID|INACCESSIBLE|UNKNOWN|TENTATIVE|DUPLICATE|OPTIMISTIC"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The status of an address.  Most of the states correspond
to states from the IPv6 Stateless Address
Autoconfiguration protocol.[adapted from IETF IP model RFC 7277]

The status of an address.  Most of the states correspond
to states from the IPv6 Stateless Address
Autoconfiguration protocol.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:neighbors" type="container"><description><![CDATA[Enclosing container for list of IPv6 neighborsEnclosing container for list of IPv6 neighbors]]>None</description><node access="read-write" key="ip" name="oc-ip:neighbor" type="list"><description><![CDATA[List of IPv6 neighborsList of IPv6 neighbors]]>None</description><node access="read-write" datatype="-&gt; ../config/ip" is_key="true" mandatory="true" name="oc-ip:ip" type="leaf"><description><![CDATA[References the configured IP neighbor addressReferences the configured IP neighbor address]]>None</description></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for each IPv6 address on
the interfaceConfiguration data for each IPv6 address on
the interface]]>None</description><node access="read-write" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.]]>None</description></node><node access="read-write" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[State data for each IPv6 address on the
interfaceState data for each IPv6 address on the
interface]]>None</description><node access="read-only" datatype="inet:ipv6-address-no-zone" name="oc-ip:ip" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.[adapted from IETF IP model RFC 7277]

The IPv6 address of the neighbor node.]]>None</description></node><node access="read-only" datatype="yang:phys-address" mandatory="true" name="oc-ip:link-layer-address" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.[adapted from IETF IP model RFC 7277]

The link-layer address of the neighbor node.]]>None</description></node><node access="read-only" datatype="neighbor-origin" name="oc-ip:origin" type="leaf" values="OTHER|STATIC|DYNAMIC"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The origin of this neighbor entry.[adapted from IETF IP model RFC 7277]

The origin of this neighbor entry.]]>None</description></node><node access="read-only" datatype="empty" name="oc-ip:is-router" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Indicates that the neighbor node acts as a router.[adapted from IETF IP model RFC 7277]

Indicates that the neighbor node acts as a router.]]>None</description></node><node access="read-only" datatype="enumeration" name="oc-ip:neighbor-state" type="leaf" values="INCOMPLETE|REACHABLE|STALE|DELAY|PROBE"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The Neighbor Unreachability Detection state of this
entry.[adapted from IETF IP model RFC 7277]

The Neighbor Unreachability Detection state of this
entry.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:unnumbered" type="container"><description><![CDATA[Top-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address informationTop-level container for setting unnumbered interfaces.
Includes reference the interface that provides the
address information]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configuration data for unnumbered interfaceConfiguration data for unnumbered interface]]>None</description><node access="read-write" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state data for unnumbered interfacesOperational state data for unnumbered interfaces]]>None</description><node access="read-only" datatype="boolean" default="false" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.Indicates that the subinterface is unnumbered.  By default
the subinterface is numbered, i.e., expected to have an
IP address configuration.]]>None</description></node></node><node access="read-write" name="oc-ip:interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterfaceReference to an interface or subinterface]]>None</description><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Configured reference to interface / subinterfaceConfigured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Operational state for interface-refOperational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="oc-ip:interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="oc-ip:subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node></node><node access="read-write" name="oc-ip:config" type="container"><description><![CDATA[Top-level config data for the IPv6 interfaceTop-level config data for the IPv6 interface]]>None</description><node access="read-write" datatype="boolean" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.]]>None</description></node><node access="read-write" datatype="uint32" name="oc-ip:mtu" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node><node access="read-write" datatype="uint32" default="1" name="oc-ip:dup-addr-detect-transmits" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.]]>None</description></node></node><node access="read-only" name="oc-ip:state" type="container"><description><![CDATA[Top-level operational state data for the IPv6 interfaceTop-level operational state data for the IPv6 interface]]>None</description><node access="read-only" datatype="boolean" default="true" name="oc-ip:enabled" type="leaf" values="true|false"><description><![CDATA[[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.[adapted from IETF IP model RFC 7277]

Controls whether IPv6 is enabled or disabled on this
interface.  When IPv6 is enabled, this interface is
connected to an IPv6 stack, and the interface can send
and receive IPv6 packets.]]>None</description></node><node access="read-only" datatype="uint32" name="oc-ip:mtu" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.[adapted from IETF IP model RFC 7277]

The size, in octets, of the largest IPv6 packet that the
interface will send and receive.

The server may restrict the allowed values for this leaf,
depending on the interface's type.

If this leaf is not configured, the operationally used MTU
depends on the interface's type.]]>None</description></node><node access="read-only" datatype="uint32" default="1" name="oc-ip:dup-addr-detect-transmits" type="leaf"><description><![CDATA[[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.[adapted from IETF IP model RFC 7277]

The number of consecutive Neighbor Solicitation messages
sent while performing Duplicate Address Detection on a
tentative address.  A value of zero indicates that
Duplicate Address Detection is not performed on
tentative addresses.  A value of one indicates a single
transmission with no follow-up retransmissions.]]>None</description></node></node></node></node></node></node></node>